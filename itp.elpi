accumulate utils.

interactive TestName OutputTerm :-
    interactive TestName [] OutputTerm.

interactive TestName TestInput OutputTerm :-
    TestName Type,
    of X Type X',
    loop [([],X)] [] TestInput,
    print_pt X' Type OutputTerm.

print_pt Term Type S :-
    pp Term TermPP, pp Type TypePP, !,
    S is TermPP ^ " :: " ^ TypePP.

% ------------------ %
% ---- ITP LOOP ---- %
% ------------------ %

loop [] OutScript InScript :-
    reverse OutScript OutReversed,
    print "Total script:" OutReversed.

% names L ==> lista nomi variabili generate es x0, x1, x2, ...

loop [(Vars,X)|TL] OutScript [] :-
    print_constraints,
    print, print Vars "|-" X,
    read T,
    tactic T TE Vars (Goals \ sigma TL' \
        X = TE,
        append Goals TL TL',
        loop TL' [T|OutScript] []).

loop [(Vars,X)|TL] OutScript [T|InScript] :-
    tactic T TE Vars (Goals \ sigma TL' \
        X = TE,
        append Goals TL TL',
        loop TL' [T|OutScript] InScript).


get_var_names [] [].
get_var_names [(X, N)|TL] TL' :- 
    get_var_names TL VNTL,
    append [N] VNTL TL'.
