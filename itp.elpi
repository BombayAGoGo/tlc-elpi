accumulate utils.
accumulate itp_components/all.

accumulate "commons/typing".
accumulate stlc/theory.

% TODO:
% - tattiche dovrebbero essere spostate nell'apposito module del linguaggio
% - questo file potrebbe contenere solo i predicati di interfaccia
% - rimuovere vecchio prove

% ------------------- %
% ---- INTERFACE ---- %
% ------------------- %

prove X T X' S :-
    of X T X', 
    itp_loop (state [(1, goal X T X' [])] [] [] 1) [] S.

prove Type ProofTerm OutScript :-
    prove Type [] ProofTerm OutScript.

prove Type InScript ProofTerm OutScript :-
    of X Type ProofTerm,
    itp_loop (state [(1, goal X Type ProofTerm [])] [] [] 1) InScript OutScript.

% ----------------- %
% ---- TACTICS ---- %
% ----------------- %

% tactic name goals fresh_vars new_goals

tactic (intro N) (goal X (arr A B) RTerm VDecls) FVars NewGoals :-
    X = lam N A F,
    build_newgoals RTerm VDecls NewGoals.

tactic (mapp N) (goal X Type RTerm VDecls) FVars NewGoals :-
    get_named N FVars Lam,
    X = app Lam dots,
    build_newgoals RTerm VDecls NewGoals.

tactic andI (goal X (prod A B) RTerm VDecls) FVars NewGoals :-
    X = pair P Q,
    build_newgoals RTerm VDecls NewGoals.

tactic (man T) (goal X Type RTerm VDecls) FVars NewGoals :-
    X = T, build_newgoals RTerm VDecls NewGoals.
