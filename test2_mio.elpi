mode (step i o).
step X Y :- print (step X Y), fail.
step (app (app plus 0) N) N.
step (app (lam T F) N) (F N).
step (app M N) U :- steps M (lam T F), step (app (lam T F) N) U.

mode (steps i o).
steps X Y :- print (steps X Y), fail.
steps M N :- step M M', !, steps M' N.
steps M M.

% nucleo
%mode (conv i i).
%conv M N :- steps M M', steps N N', M' = N'.

mode (conv i i).
conv X Y :- print (conv X Y), fail.
conv (app (app plus N) M) M' :- N = 0, M' = M.
conv M N :- step M M', conv M' N.
conv M N :- step N N', conv M N'.
conv (app M1 N1) (app M2 N2) :- conv M1 M2, conv N1 N2.
conv (lam _ F1) (lam _ F2) :- pi x \ conv (F1 x) (F2 x).
conv M M.

main X Y :-
 conv (app (app plus X) n) (app (lam nat x \ x) Y).
