%accumulate itt/lang.
accumulate itp.
%accumulate itt/tactics.
accumulate itt/theory.
accumulate itt/pp.

%main :- interactive andElimR [intro f, andER f] S.

identity (prod a (x\ a)).

% ---------------------- %
% ---- K combinator ---- %
% ---------------------- %

% [intro, intro, app x]
comb_K (prod a (x\ prod b (y\ a))).

% ---------------------- %
% ---- S combinator ---- %
% ---------------------- %

% [intro g, intro f, intro x, app g, app f, app x, app x]
comb_S (prod (prod a (x\ prod b (y\ c))) (_\ prod (prod a (x\ b)) (f\ prod a (x\ c)))).

% axioms of conjunction
% [intro f, intro g, andI f g]
andIntro (prod a (x\ prod b (y\ sum a (z\ b)))).

% [intro p, andEL p]
andElimL (prod (sum a (x\ b)) (y\ a)).

% [intro p, andER p]
andElimR (prod (sum a (x\ b)) (y\ b)).

% [intro f, intro z, andE x y z, app, app, app f, app x, app y]
implAnd (@arrow (prod a (x\ prod b (y\ c))) (prod (sum a (x\ b)) (z\ c))).
