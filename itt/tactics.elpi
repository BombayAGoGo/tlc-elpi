% --------------------------- %
% ---- CARTESIAN PRODUCT ---- %
% --------------------------- %

% return a lambda abstraction, prove (F x)
tactic (intro Name) (lam Name T1 Body) Vars K :-
    pi x \ K [([(x, Name)|Vars], (Body x))].


% ---- APP TACTICS ----
tactic app (app Lambda Arg) Vars K :-
    K [(Vars, Lambda), (Vars, Arg)].

%tactic (oapp N) (app Lambda Arg) Vars K :-
%    nth_element N Vars Lambda,
%    K [(Vars, Arg)].

tactic (mapp N) (app Lambda dots) Vars K :-
    get_named N Vars Lambda,
    print K, print Vars,
    K []. % wrong: recuperare le meta

tactic (app N) T Vars K :-
    get_named N Vars Lambda,
    many_args Vars Lambda T L,
    K L.

many_args Vars Lambda Lambda [].
many_args Vars Lambda (app Lambda' Arg) [(Vars, Arg)|L] :-
    many_args Vars Lambda Lambda' L.

%tactic (app N M) (app Lambda Arg) Vars K :-
%    nth_element N Vars Lambda,
%    nth_element M Vars Arg,
%    K [].

% ------------------------ %
% ---- DISJOINT UNION ---- %
% ------------------------ %

tactic (andEL) (fst P) Vars K :-
    K [(Vars, P)].
tactic (andER) (snd P) Vars K :-
    K [(Vars, P)].

% and elimination but with hypothesis use
tactic (andEL N) (fst H) Vars K :-
    get_named N Vars H,
    K [].
tactic (andER N) (snd H) Vars K :-
    get_named N Vars H,
    K [].

tactic (andE Name1 Name2) (split P Name1 Name2 F) Vars K :-
    pi x y\
        K [(Vars, P), ([(x, Name1), (y, Name2)|Vars], (F x y))].

tactic (andE Name1 Name2 N) (split H Name1 Name2 F) Vars K :-
    get_named N Vars H,
    pi x y\ K [([(x, Name1), (y, Name2)|Vars], (F x y))].

tactic (andE Name1 Name2 N M) (split H Name1 Name2 G) Vars K :-
    get_named N Vars H,
    get_named M Vars G,
    K [].

tactic andI (pair X Y) Vars K :-
    K [(Vars, X), (Vars, Y)].

tactic (andI N M) (pair H G) Vars K :-
    get_named N Vars H,
    get_named M Vars G,
    K [].


% -------------------- %
% ---- HYPOTHESIS ---- %
% -------------------- %

tactic (var N) H Vars K :-
    get_named N Vars H,
    K [].


% Error
%tactic Name H Vars K :- 
%    print "Error, something went wrong with " Name,
%    print H,
%    print Vars,
%    print K.
