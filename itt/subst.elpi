% Internalization of substitution notion for closed terms of itt

% PI
copy (prod A B) (prod T S) :- copy A T, pi x\ copy (B x) (S x).
copy (app M N) (app P Q) :- copy M P, copy N Q.
copy (lam Name T M) (lam Name T N) :- pi x\ copy (M x) (N x).

% SIGMA
copy (pair M N) (pair P Q) :- copy M P, copy N Q.
copy (sum A B) (sum T S) :- copy A T, pi x\ copy (B x) (S x).
copy (pair M N) (pair P Q) :- copy M P, copy N Q.
copy (split Pair N1 N2 Func) (split Pair' N1 N2 Func') :-
    copy Pair Pair',
    pi x y\ copy (Func x y) (Func' x y).
copy (fst P) (fst Q) :- copy P Q.
copy (snd P) (snd Q) :- copy P Q.

% NATS
copy nat      nat.
copy zero     zero.
copy (succ M) (succ N) :- copy M N.
copy (natrec N ZeroElement N1 N2 RecFun) (natrec M ZeroElement' N1 N2 RecFun') :-
    copy N M,
    copy ZeroElement ZeroElement',
    pi x y\ copy (RecFun x y) (RecFun' x y).

copy A A.

%subst A B C :- print (subst A B C), fail.
subst M [] S :- copy M S.
subst M [T|TS] S :- pi x\ copy x T => subst (M x) TS S.
