% Typing, conversion etc... of elaborator terms

% ---- TYPING ---- %

isa (app Lam dots) T O IE :- isa Lam T O IE.
isa (app Lam dots) T O IE :- !,
    (isa Lam (forall _ _) _ _, !; 
    isa Lam (implies _ _) _ _, !; 
    isa Lam (setPi _ _) _ _),
    isa (app (app Lam Arg) dots) T O IE.

of (elim_exist N1 N2 P T F) T (elim_exist N1 N2 P' T F') IE :-
    of (elim_exist P T F) T (elim_exist P' T F') IE.
of (forall_lam N A F) T (forall_lam N A F') IE :-
    of (forall_lam A F) T (forall_lam A F') IE.
of (impl_lam N A F) T (impl_lam N A F') IE :-
    of (impl_lam A F) T (impl_lam A F') IE.
of (elim_list N1 N2 N3 L List LA LL) T (elim_list N1 N2 N3 L List' LA' LL') IE :-
    of (elim_list L List LA LL) T (elim_list L List' LA' LL') IE.
of (elim_or N1 N2 T W Cl Cr) T (elim_or N1 N2 T W' Cl' Cr') IE :-
    of (elim_or T W Cl Cr) T (elim_or T W' Cl' Cr') IE.
of (elim_id N P C F) T (elim_id N P' C F') IE :- 
    of (elim_id P C F) T (elim_id P' C F') IE.
of (lambda N A F) T (lambda N A F') IE :-
    of (lambda A F) T (lambda A F') IE.
of (elim_setSigma N1 N2 P C F) T (elim_setSigma N1 N2 P' C F') IE :-
    of (elim_setSigma P C F) T (elim_setSigma P' C F') IE.
of (elim_setSum N1 N2 C W Cl Cr) T (elim_setSum N1 N2 C W' Cl' Cr') IE :-
    of (elim_setSum C W Cl Cr) T (elim_setSum C W' Cl' Cr') IE.

% ---- CONVERSION ---- %

dconv (elim_exist _ _ P T F) (elim_exist _ _ P' T' F') :- !,
    dconv (elim_exist P T F) (elim_exist P' T' F').
dconv (forall_lam _ A F) (forall_lam _ A' F') :- !,
    dconv (forall_lam A F) (forall_lam A' F').
dconv (impl_lam _ A F) (impl_lam _ A' F') :- !,
    dconv (impl_lam A F) (impl_lam A' F').
dconv (elim_list N1 N2 N3 L List LA LL) (elim_list N1 N2 N3 L' List' LA' LL') :- !,
    dconv (elim_list L List LA LL) (elim_list L' List' LA' LL').
dconv (elim_or _ _ T W Cl Cr) (elim_or _ _ T' W' Cl' Cr') :- !,
    dconv (elim_or T W Cl Cr) (elim_or T' W' Cl' Cr').
dconv (elim_id _ P C F) (elim_id _ P' C' F') :- !,
    dconv (elim_id P C F) (elim_id P' C' F').
dconv (lambda _ A F) (lambda _ A' F') :- !,
    dconv (lambda A F) (lambda A' F').
dconv (elim_setSigma _ _ P C F) (elim_setSigma _ _ P' C' F') :- !,
    dconv (elim_setSigma P C F) (elim_setSigma P' C' F').
dconv (elim_setSum _ _ C W Cl Cr) (elim_setSum _ _ C' W' Cl' Cr') :- !,
    dconv (elim_setSum C W Cl Cr) (elim_setSum C' W' Cl' Cr').
